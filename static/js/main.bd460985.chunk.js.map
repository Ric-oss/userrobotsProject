{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Popup.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","src","alt","CardList","robots","map","user","i","emailid","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Popup","onClick","closePops","App","onSearchChange","event","setState","searchfield","target","value","openPops","popup","state","message","fetch","Response","json","res","filteedRobots","this","filter","robot","toLowerCase","includes","length","Fragment","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCKCQ,EAXJ,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,GAAGC,EAAc,EAAdA,KAAKC,EAAS,EAATA,MACjB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,QACpD,gCACA,6BAAKJ,IACL,4BAAIC,WCUDI,EAfE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACA,8BAMIA,EAAOC,KAAI,SAACC,EAAKC,GACf,OAAO,cAAC,EAAD,CAAMV,GAAIO,EAAOG,GAAGV,GAAIC,KAAMM,EAAOG,GAAGT,KAAMC,MAAOK,EAAOG,GAAGC,gBCF/DC,EAPC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACI,8BACI,uBAAOC,KAAK,SAASC,YAAY,cAAcC,SAAUH,OCKtDI,G,MAPF,SAACC,GACV,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,iBAAiBC,OAAO,SAA/D,SACEJ,EAAMK,aCMDC,G,MATH,SAACN,GACV,OACI,qBAAKf,UAAU,cAAf,SACI,qBAAKA,UAAU,iBAAf,SACG,qBAAKA,UAAU,eAAesB,QAASP,EAAMQ,UAA7C,qBCoECC,E,kDAnEX,aAAc,IAAD,8BACT,gBAaJC,eAAe,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAf3B,EA2BfC,SAAS,WACL,EAAKJ,SAAS,CAACK,OAAM,KA5BV,EA8BfT,UAAU,WACR,EAAKI,SAAS,CAACK,OAAM,KA7BjB,EAAKC,MAAM,CACPC,QAAQ,WACR9B,OAAO,GACPwB,YAAY,GACZI,OAAM,GAND,E,qDAkBf,WAAoB,IAAD,OACfG,MAAM,8CACL7C,MAAK,SAAA8C,GACF,OAAOA,EAASC,UACjB/C,MAAK,SAAAgD,GACJ,EAAKX,SAAS,CAACvB,OAAOkC,S,oBAW5B,WAAS,IAAD,OACEC,EAAcC,KAAKP,MAAM7B,OAAOqC,QAAO,SAAAC,GACzC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKX,MAAML,YAAYe,kBAEpE,OAA0B,IAAvBJ,EAAcM,OACN,gDAIH,eAAC,IAAMC,SAAP,WACIN,KAAKP,MAAMD,MAAM,cAAC,EAAD,CAAOT,UAAWiB,KAAKjB,YAAa,GAErD,sBAAKvB,UAAU,KAAf,UAEA,6BAAKwC,KAAKP,MAAMC,UAEf,wBAAQZ,QAASkB,KAAKT,SAAtB,mBACD,cAAC,EAAD,CAAWrB,aAAc8B,KAAKf,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUrB,OAAQmC,gB,GAtDpBQ,IAAMC,WCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1BlE,M","file":"static/js/main.bd460985.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nconst Card=({id,name,email})=>{\r\n    return(\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?150x150`} alt=\"img\"/>\r\n            <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList = ({robots}) => {\r\n  return(\r\n  <div>\r\n   {  /* <Card id={robots[0].id} name={robots[0].name} email={robots[0].emailid}/>\r\n    <Card id={robots[1].id} name={robots[1].name} email={robots[1].emailid}/>\r\n    <Card id={robots[2].id} name={robots[2].name} email={robots[2].emailid}/>\r\n  </div>*/}\r\n  {\r\n      robots.map((user,i)=>{\r\n        return <Card id={robots[i].id} name={robots[i].name} email={robots[i].emailid}/> \r\n      })\r\n  }\r\n  </div>\r\n  )\r\n}\r\nexport default CardList;","\r\n\r\nconst SearchBox=({searchChange})=>{\r\n    return(\r\n        <div>\r\n            <input type=\"search\" placeholder=\"Serch Robot\" onChange={searchChange} />\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll=(props)=>{\r\n    return(\r\n        <div style={{overflowY:'scroll',border:'1px solid pink',height:'500px'}}>\r\n         {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Scroll;","import React from 'react';\r\nimport './Popups.css';\r\n\r\nconst Popup=(props)=>{\r\n   return(\r\n       <div className=\"popup--back\">\r\n           <div className=\"popup--content\">\r\n              <div className=\"popup--close\" onClick={props.closePops}>X</div>\r\n           </div>\r\n       </div>\r\n   )\r\n}\r\nexport default Popup;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport \"./App.css\"\r\nimport Scroll from \"../components/Scroll.js\";\r\nimport Popup from \"../components/Popup.js\";\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            message:\"Robofans\",\r\n            robots:[],\r\n            searchfield:'',\r\n            popup:false\r\n\r\n        }\r\n    }\r\n\r\n   //changeMessage=()=>{\r\n    //  this.setState({message:'you subscribe successfully'})\r\n  // }\r\n    onSearchChange=(event)=>{\r\n    this.setState({searchfield:event.target.value});\r\n   }\r\n\r\n  componentDidMount(){\r\n      fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(Response=>{\r\n          return Response.json();\r\n      }).then(res=>{\r\n          this.setState({robots:res});\r\n      })\r\n  }\r\n   \r\n  openPops=()=>{\r\n      this.setState({popup:true});\r\n  }\r\n  closePops=()=>{\r\n    this.setState({popup:false});\r\n\r\n  }\r\n    render(){\r\n        const filteedRobots=this.state.robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if(filteedRobots.length===0){\r\n            return <h1>Loading.......</h1>\r\n        }else{\r\n            return(\r\n       \r\n                <React.Fragment>\r\n                   {this.state.popup?<Popup closePops={this.closePops}/>:\"\"}\r\n                    \r\n                    <div className=\"tc\">\r\n                    \r\n                    <h1>{this.state.message}</h1>\r\n                   {/* <button type=\"button\" onClick={this.changeMessage}>subscribe</button>*/}\r\n                     <button onClick={this.openPops}>popup</button>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                    <CardList robots={filteedRobots}/>\r\n                    </Scroll>\r\n                </div>\r\n            \r\n                </React.Fragment>\r\n                \r\n        \r\n    )\r\n        }\r\n        \r\n    }\r\n}\r\n \r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport tachyons from 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}